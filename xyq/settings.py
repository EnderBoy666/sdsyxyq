"""
Django settings for xyq project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
import datetime

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-^!qp3^zapydu^-2z*p_@z3j%awpqxo01evys3c#btmsh&=m*-@'

# SECURITY WARNING: don't run with debug turned on in production!
if os.environ.get('DEBUG') == 'TRUE':
    DEBUG = True
else:
    DEBUG = False

ALLOWED_HOSTS = ['*']

CSRF_TRUSTED_ORIGINS = [
    'https://sdsyxyq.onrender.com',  # Render 域名
    'http://localhost:8000',         # 本地开发环境
]

# Application definition

INSTALLED_APPS = [
    # 我的应用程序
    'xyq_files',
    'users',
    'user_level',

    # 第三方应用程序（新增）
    'bootstrap4',
    'captcha',
    'rest_framework',  # DRF
    'corsheaders',     # CORS

    # 默认添加的应用程序
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'users.middleware.RequestLimitMiddleware',
    'users.middleware.EULACheckMiddleware',  #添加EULA检查中间件
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'xyq.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'xyq_files.context_processors.unread_count_processor',
            ],
        },
    },
]

WSGI_APPLICATION = 'xyq.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Database（修改为PostgreSQL配置）
if os.environ.get('SJK') == 'TRUE':
    DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'django',       # 数据库名（需提前在PostgreSQL创建）
        'USER': 'enderboy',       # 数据库用户
        'PASSWORD': '531855771',   # 用户密码CLI工具
        'HOST': '103.40.13.68',       # 数据库地址（如localhost或云数据库地址）
        'PORT': '55555',               # 修正为PostgreSQL默认端口（原55555）
    }
}
else:
   DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3', 
        }
    }

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static')]
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'users.CustomUser'

BOOTSTRAP4 = {
    'include_jquery': True,
    'jquery_url': {
        'url': '/static/js/jquery-3.7.1.min.js',
    },
    'javascript_url': {
        'url': '/static/bootstrap/js/bootstrap.min.js',
    },
    'css_url': {
        'url': '/static/bootstrap/css/bootstrap.min.css',
    },
}

# 新增CORS配置（文件末尾）
CORS_ALLOWED_ORIGINS = [
    'https://your-netlify-site.netlify.app',  # 替换为实际Netlify前端URL
    'http://localhost:3000',  # 本地前端开发端口（如React默认3000）
]
CORS_ALLOW_CREDENTIALS = True  # 允许携带Cookie
